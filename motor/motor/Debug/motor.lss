
motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000005fe  00000672  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000674  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000006e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a93  00000000  00000000  0000074c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000902  00000000  00000000  000011df  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000aee  00000000  00000000  00001ae1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  000025d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00012ccf  00000000  00000000  00002690  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b4  00000000  00000000  0001535f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00015513  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000006a6  00000000  00000000  0001555b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee ef       	ldi	r30, 0xFE	; 254
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	a5 d0       	rcall	.+330    	; 0x1fe <main>
  b4:	a2 c2       	rjmp	.+1348   	; 0x5fa <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <board_init>:
#include <board.h>
#include <compiler.h>
#include <conf_board.h>

void board_init(void)
{
  b8:	08 95       	ret

000000ba <__portable_avr_delay_cycles>:
		delay_ms(50);
	}
}

void initGPIO(){
	DDRB = (1<<DDB0) | (1<<DDB1); //set GPIO0 and GPIO1 as outputs
  ba:	04 c0       	rjmp	.+8      	; 0xc4 <__portable_avr_delay_cycles+0xa>
  bc:	61 50       	subi	r22, 0x01	; 1
  be:	71 09       	sbc	r23, r1
  c0:	81 09       	sbc	r24, r1
  c2:	91 09       	sbc	r25, r1
  c4:	61 15       	cp	r22, r1
  c6:	71 05       	cpc	r23, r1
  c8:	81 05       	cpc	r24, r1
  ca:	91 05       	cpc	r25, r1
  cc:	b9 f7       	brne	.-18     	; 0xbc <__portable_avr_delay_cycles+0x2>
  ce:	08 95       	ret

000000d0 <setMotorDir>:
	//DDRC |= (1<<DDC4); //enable GPIO6
}

void setMotorDir(bool dir){
	//using PORTD4 for pulse dir
	if(dir){
  d0:	88 23       	and	r24, r24
  d2:	11 f0       	breq	.+4      	; 0xd8 <setMotorDir+0x8>
		PORTB |= (1<<PORTB0);
  d4:	28 9a       	sbi	0x05, 0	; 5
  d6:	08 95       	ret
	}
	else{
		PORTB &= ~(1<<PORTB0);
  d8:	28 98       	cbi	0x05, 0	; 5
  da:	08 95       	ret

000000dc <moveMotor>:
	}
}

void moveMotor(int steps){
  dc:	af 92       	push	r10
  de:	bf 92       	push	r11
  e0:	cf 92       	push	r12
  e2:	df 92       	push	r13
  e4:	ef 92       	push	r14
  e6:	ff 92       	push	r15
  e8:	0f 93       	push	r16
  ea:	1f 93       	push	r17
	PORTB |= (1<<PORTB1);
  ec:	29 9a       	sbi	0x05, 1	; 5
	delay_us(pulseDelay);
  ee:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f6:	41 15       	cp	r20, r1
  f8:	51 05       	cpc	r21, r1
  fa:	99 f1       	breq	.+102    	; 0x162 <moveMotor+0x86>
  fc:	95 2f       	mov	r25, r21
  fe:	99 0f       	add	r25, r25
 100:	99 0b       	sbc	r25, r25
 102:	68 94       	set
 104:	aa 24       	eor	r10, r10
 106:	a6 f8       	bld	r10, 6
 108:	0f 2e       	mov	r0, r31
 10a:	f2 e4       	ldi	r31, 0x42	; 66
 10c:	bf 2e       	mov	r11, r31
 10e:	f0 2d       	mov	r31, r0
 110:	0f 2e       	mov	r0, r31
 112:	ff e0       	ldi	r31, 0x0F	; 15
 114:	cf 2e       	mov	r12, r31
 116:	f0 2d       	mov	r31, r0
 118:	d1 2c       	mov	r13, r1
 11a:	e1 2c       	mov	r14, r1
 11c:	f1 2c       	mov	r15, r1
 11e:	00 e0       	ldi	r16, 0x00	; 0
 120:	10 e0       	ldi	r17, 0x00	; 0
 122:	24 2f       	mov	r18, r20
 124:	35 2f       	mov	r19, r21
 126:	49 2f       	mov	r20, r25
 128:	59 2f       	mov	r21, r25
 12a:	69 2f       	mov	r22, r25
 12c:	79 2f       	mov	r23, r25
 12e:	89 2f       	mov	r24, r25
 130:	a6 d1       	rcall	.+844    	; 0x47e <__muldi3>
 132:	0f 2e       	mov	r0, r31
 134:	f6 e0       	ldi	r31, 0x06	; 6
 136:	af 2e       	mov	r10, r31
 138:	f0 2d       	mov	r31, r0
 13a:	b1 2c       	mov	r11, r1
 13c:	c1 2c       	mov	r12, r1
 13e:	f2 d1       	rcall	.+996    	; 0x524 <__udivdi3>
 140:	21 5c       	subi	r18, 0xC1	; 193
 142:	3d 4b       	sbci	r19, 0xBD	; 189
 144:	40 4f       	sbci	r20, 0xF0	; 240
 146:	5f 4f       	sbci	r21, 0xFF	; 255
 148:	6f 4f       	sbci	r22, 0xFF	; 255
 14a:	7f 4f       	sbci	r23, 0xFF	; 255
 14c:	8f 4f       	sbci	r24, 0xFF	; 255
 14e:	9f 4f       	sbci	r25, 0xFF	; 255
 150:	07 d1       	rcall	.+526    	; 0x360 <__floatundisf>
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	34 e2       	ldi	r19, 0x24	; 36
 156:	44 e7       	ldi	r20, 0x74	; 116
 158:	59 e4       	ldi	r21, 0x49	; 73
 15a:	6e d0       	rcall	.+220    	; 0x238 <__divsf3>
 15c:	d5 d0       	rcall	.+426    	; 0x308 <__fixunssfsi>
 15e:	ad df       	rcall	.-166    	; 0xba <__portable_avr_delay_cycles>
 160:	05 c0       	rjmp	.+10     	; 0x16c <moveMotor+0x90>
 162:	61 e0       	ldi	r22, 0x01	; 1
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	a7 df       	rcall	.-178    	; 0xba <__portable_avr_delay_cycles>
 16c:	29 98       	cbi	0x05, 1	; 5
	PORTB &= ~(1<<PORTB1);
 16e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
	delay_us(pulseDelay);
 172:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 176:	00 97       	sbiw	r24, 0x00	; 0
 178:	a1 f1       	breq	.+104    	; 0x1e2 <moveMotor+0x106>
 17a:	e9 2f       	mov	r30, r25
 17c:	ee 0f       	add	r30, r30
 17e:	ee 0b       	sbc	r30, r30
 180:	68 94       	set
 182:	aa 24       	eor	r10, r10
 184:	a6 f8       	bld	r10, 6
 186:	0f 2e       	mov	r0, r31
 188:	f2 e4       	ldi	r31, 0x42	; 66
 18a:	bf 2e       	mov	r11, r31
 18c:	f0 2d       	mov	r31, r0
 18e:	0f 2e       	mov	r0, r31
 190:	ff e0       	ldi	r31, 0x0F	; 15
 192:	cf 2e       	mov	r12, r31
 194:	f0 2d       	mov	r31, r0
 196:	d1 2c       	mov	r13, r1
 198:	e1 2c       	mov	r14, r1
 19a:	f1 2c       	mov	r15, r1
 19c:	00 e0       	ldi	r16, 0x00	; 0
 19e:	10 e0       	ldi	r17, 0x00	; 0
 1a0:	28 2f       	mov	r18, r24
 1a2:	39 2f       	mov	r19, r25
 1a4:	4e 2f       	mov	r20, r30
 1a6:	5e 2f       	mov	r21, r30
 1a8:	6e 2f       	mov	r22, r30
 1aa:	7e 2f       	mov	r23, r30
 1ac:	8e 2f       	mov	r24, r30
 1ae:	9e 2f       	mov	r25, r30
 1b0:	66 d1       	rcall	.+716    	; 0x47e <__muldi3>
 1b2:	0f 2e       	mov	r0, r31
 1b4:	f6 e0       	ldi	r31, 0x06	; 6
 1b6:	af 2e       	mov	r10, r31
 1b8:	f0 2d       	mov	r31, r0
 1ba:	b1 2c       	mov	r11, r1
 1bc:	c1 2c       	mov	r12, r1
 1be:	b2 d1       	rcall	.+868    	; 0x524 <__udivdi3>
 1c0:	21 5c       	subi	r18, 0xC1	; 193
 1c2:	3d 4b       	sbci	r19, 0xBD	; 189
 1c4:	40 4f       	sbci	r20, 0xF0	; 240
 1c6:	5f 4f       	sbci	r21, 0xFF	; 255
 1c8:	6f 4f       	sbci	r22, 0xFF	; 255
 1ca:	7f 4f       	sbci	r23, 0xFF	; 255
 1cc:	8f 4f       	sbci	r24, 0xFF	; 255
 1ce:	9f 4f       	sbci	r25, 0xFF	; 255
 1d0:	c7 d0       	rcall	.+398    	; 0x360 <__floatundisf>
 1d2:	20 e0       	ldi	r18, 0x00	; 0
 1d4:	34 e2       	ldi	r19, 0x24	; 36
 1d6:	44 e7       	ldi	r20, 0x74	; 116
 1d8:	59 e4       	ldi	r21, 0x49	; 73
 1da:	2e d0       	rcall	.+92     	; 0x238 <__divsf3>
 1dc:	95 d0       	rcall	.+298    	; 0x308 <__fixunssfsi>
 1de:	6d df       	rcall	.-294    	; 0xba <__portable_avr_delay_cycles>
 1e0:	05 c0       	rjmp	.+10     	; 0x1ec <moveMotor+0x110>
 1e2:	61 e0       	ldi	r22, 0x01	; 1
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	67 df       	rcall	.-306    	; 0xba <__portable_avr_delay_cycles>
 1ec:	1f 91       	pop	r17
}
 1ee:	0f 91       	pop	r16
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	df 90       	pop	r13
 1f6:	cf 90       	pop	r12
 1f8:	bf 90       	pop	r11
 1fa:	af 90       	pop	r10
 1fc:	08 95       	ret

000001fe <main>:
 1fe:	5c df       	rcall	.-328    	; 0xb8 <board_init>
		delay_ms(50);
	}
}

void initGPIO(){
	DDRB = (1<<DDB0) | (1<<DDB1); //set GPIO0 and GPIO1 as outputs
 200:	83 e0       	ldi	r24, 0x03	; 3
 202:	84 b9       	out	0x04, r24	; 4
	//change stuff below; SW0 = PB0 = PCINT8
	//PCMSK0 |= (1<<PCINT0); //enable PCINT0
	//PCIFR |= (1<<PCIF0); //clear PCINT0
	//PCICR |= (1<<PCIE0); //enable PCINT0
	
	sei(); //enable interrupts
 204:	78 94       	sei
	int dir = 0;
 206:	00 e0       	ldi	r16, 0x00	; 0
 208:	10 e0       	ldi	r17, 0x00	; 0
	
	while(1){
		for(int i = 0; i < 20000; ++i){
			moveMotor(1);
		}
		dir = !dir;
 20a:	ff 24       	eor	r15, r15
 20c:	f3 94       	inc	r15
 20e:	e1 2c       	mov	r14, r1
	//PCMSK0 |= (1<<PCINT0); //enable PCINT0
	//PCIFR |= (1<<PCIF0); //clear PCINT0
	//PCICR |= (1<<PCIE0); //enable PCINT0
	
	sei(); //enable interrupts
	int dir = 0;
 210:	c0 e2       	ldi	r28, 0x20	; 32
 212:	de e4       	ldi	r29, 0x4E	; 78
	
	while(1){
		for(int i = 0; i < 20000; ++i){
			moveMotor(1);
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	61 df       	rcall	.-318    	; 0xdc <moveMotor>
 21a:	21 97       	sbiw	r28, 0x01	; 1
	
	sei(); //enable interrupts
	int dir = 0;
	
	while(1){
		for(int i = 0; i < 20000; ++i){
 21c:	d9 f7       	brne	.-10     	; 0x214 <main+0x16>
			moveMotor(1);
		}
		dir = !dir;
 21e:	8f 2d       	mov	r24, r15
 220:	01 2b       	or	r16, r17
 222:	09 f0       	breq	.+2      	; 0x226 <main+0x28>
 224:	8e 2d       	mov	r24, r14
 226:	08 2f       	mov	r16, r24
		setMotorDir(dir);
 228:	10 e0       	ldi	r17, 0x00	; 0
 22a:	52 df       	rcall	.-348    	; 0xd0 <setMotorDir>
		delay_ms(50);
 22c:	6e e8       	ldi	r22, 0x8E	; 142
 22e:	70 e2       	ldi	r23, 0x20	; 32
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	42 df       	rcall	.-380    	; 0xba <__portable_avr_delay_cycles>
	}
 236:	ec cf       	rjmp	.-40     	; 0x210 <main+0x12>

00000238 <__divsf3>:
 238:	0c d0       	rcall	.+24     	; 0x252 <__divsf3x>
 23a:	e7 c0       	rjmp	.+462    	; 0x40a <__fp_round>
 23c:	df d0       	rcall	.+446    	; 0x3fc <__fp_pscB>
 23e:	40 f0       	brcs	.+16     	; 0x250 <__divsf3+0x18>
 240:	d6 d0       	rcall	.+428    	; 0x3ee <__fp_pscA>
 242:	30 f0       	brcs	.+12     	; 0x250 <__divsf3+0x18>
 244:	21 f4       	brne	.+8      	; 0x24e <__divsf3+0x16>
 246:	5f 3f       	cpi	r21, 0xFF	; 255
 248:	19 f0       	breq	.+6      	; 0x250 <__divsf3+0x18>
 24a:	c8 c0       	rjmp	.+400    	; 0x3dc <__fp_inf>
 24c:	51 11       	cpse	r21, r1
 24e:	11 c1       	rjmp	.+546    	; 0x472 <__fp_szero>
 250:	cb c0       	rjmp	.+406    	; 0x3e8 <__fp_nan>

00000252 <__divsf3x>:
 252:	ec d0       	rcall	.+472    	; 0x42c <__fp_split3>
 254:	98 f3       	brcs	.-26     	; 0x23c <__divsf3+0x4>

00000256 <__divsf3_pse>:
 256:	99 23       	and	r25, r25
 258:	c9 f3       	breq	.-14     	; 0x24c <__divsf3+0x14>
 25a:	55 23       	and	r21, r21
 25c:	b1 f3       	breq	.-20     	; 0x24a <__divsf3+0x12>
 25e:	95 1b       	sub	r25, r21
 260:	55 0b       	sbc	r21, r21
 262:	bb 27       	eor	r27, r27
 264:	aa 27       	eor	r26, r26
 266:	62 17       	cp	r22, r18
 268:	73 07       	cpc	r23, r19
 26a:	84 07       	cpc	r24, r20
 26c:	38 f0       	brcs	.+14     	; 0x27c <__divsf3_pse+0x26>
 26e:	9f 5f       	subi	r25, 0xFF	; 255
 270:	5f 4f       	sbci	r21, 0xFF	; 255
 272:	22 0f       	add	r18, r18
 274:	33 1f       	adc	r19, r19
 276:	44 1f       	adc	r20, r20
 278:	aa 1f       	adc	r26, r26
 27a:	a9 f3       	breq	.-22     	; 0x266 <__divsf3_pse+0x10>
 27c:	33 d0       	rcall	.+102    	; 0x2e4 <__divsf3_pse+0x8e>
 27e:	0e 2e       	mov	r0, r30
 280:	3a f0       	brmi	.+14     	; 0x290 <__divsf3_pse+0x3a>
 282:	e0 e8       	ldi	r30, 0x80	; 128
 284:	30 d0       	rcall	.+96     	; 0x2e6 <__divsf3_pse+0x90>
 286:	91 50       	subi	r25, 0x01	; 1
 288:	50 40       	sbci	r21, 0x00	; 0
 28a:	e6 95       	lsr	r30
 28c:	00 1c       	adc	r0, r0
 28e:	ca f7       	brpl	.-14     	; 0x282 <__divsf3_pse+0x2c>
 290:	29 d0       	rcall	.+82     	; 0x2e4 <__divsf3_pse+0x8e>
 292:	fe 2f       	mov	r31, r30
 294:	27 d0       	rcall	.+78     	; 0x2e4 <__divsf3_pse+0x8e>
 296:	66 0f       	add	r22, r22
 298:	77 1f       	adc	r23, r23
 29a:	88 1f       	adc	r24, r24
 29c:	bb 1f       	adc	r27, r27
 29e:	26 17       	cp	r18, r22
 2a0:	37 07       	cpc	r19, r23
 2a2:	48 07       	cpc	r20, r24
 2a4:	ab 07       	cpc	r26, r27
 2a6:	b0 e8       	ldi	r27, 0x80	; 128
 2a8:	09 f0       	breq	.+2      	; 0x2ac <__divsf3_pse+0x56>
 2aa:	bb 0b       	sbc	r27, r27
 2ac:	80 2d       	mov	r24, r0
 2ae:	bf 01       	movw	r22, r30
 2b0:	ff 27       	eor	r31, r31
 2b2:	93 58       	subi	r25, 0x83	; 131
 2b4:	5f 4f       	sbci	r21, 0xFF	; 255
 2b6:	2a f0       	brmi	.+10     	; 0x2c2 <__divsf3_pse+0x6c>
 2b8:	9e 3f       	cpi	r25, 0xFE	; 254
 2ba:	51 05       	cpc	r21, r1
 2bc:	68 f0       	brcs	.+26     	; 0x2d8 <__divsf3_pse+0x82>
 2be:	8e c0       	rjmp	.+284    	; 0x3dc <__fp_inf>
 2c0:	d8 c0       	rjmp	.+432    	; 0x472 <__fp_szero>
 2c2:	5f 3f       	cpi	r21, 0xFF	; 255
 2c4:	ec f3       	brlt	.-6      	; 0x2c0 <__divsf3_pse+0x6a>
 2c6:	98 3e       	cpi	r25, 0xE8	; 232
 2c8:	dc f3       	brlt	.-10     	; 0x2c0 <__divsf3_pse+0x6a>
 2ca:	86 95       	lsr	r24
 2cc:	77 95       	ror	r23
 2ce:	67 95       	ror	r22
 2d0:	b7 95       	ror	r27
 2d2:	f7 95       	ror	r31
 2d4:	9f 5f       	subi	r25, 0xFF	; 255
 2d6:	c9 f7       	brne	.-14     	; 0x2ca <__divsf3_pse+0x74>
 2d8:	88 0f       	add	r24, r24
 2da:	91 1d       	adc	r25, r1
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	97 f9       	bld	r25, 7
 2e2:	08 95       	ret
 2e4:	e1 e0       	ldi	r30, 0x01	; 1
 2e6:	66 0f       	add	r22, r22
 2e8:	77 1f       	adc	r23, r23
 2ea:	88 1f       	adc	r24, r24
 2ec:	bb 1f       	adc	r27, r27
 2ee:	62 17       	cp	r22, r18
 2f0:	73 07       	cpc	r23, r19
 2f2:	84 07       	cpc	r24, r20
 2f4:	ba 07       	cpc	r27, r26
 2f6:	20 f0       	brcs	.+8      	; 0x300 <__divsf3_pse+0xaa>
 2f8:	62 1b       	sub	r22, r18
 2fa:	73 0b       	sbc	r23, r19
 2fc:	84 0b       	sbc	r24, r20
 2fe:	ba 0b       	sbc	r27, r26
 300:	ee 1f       	adc	r30, r30
 302:	88 f7       	brcc	.-30     	; 0x2e6 <__divsf3_pse+0x90>
 304:	e0 95       	com	r30
 306:	08 95       	ret

00000308 <__fixunssfsi>:
 308:	99 d0       	rcall	.+306    	; 0x43c <__fp_splitA>
 30a:	88 f0       	brcs	.+34     	; 0x32e <__fixunssfsi+0x26>
 30c:	9f 57       	subi	r25, 0x7F	; 127
 30e:	90 f0       	brcs	.+36     	; 0x334 <__fixunssfsi+0x2c>
 310:	b9 2f       	mov	r27, r25
 312:	99 27       	eor	r25, r25
 314:	b7 51       	subi	r27, 0x17	; 23
 316:	a0 f0       	brcs	.+40     	; 0x340 <__fixunssfsi+0x38>
 318:	d1 f0       	breq	.+52     	; 0x34e <__fixunssfsi+0x46>
 31a:	66 0f       	add	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	88 1f       	adc	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	1a f0       	brmi	.+6      	; 0x32a <__fixunssfsi+0x22>
 324:	ba 95       	dec	r27
 326:	c9 f7       	brne	.-14     	; 0x31a <__fixunssfsi+0x12>
 328:	12 c0       	rjmp	.+36     	; 0x34e <__fixunssfsi+0x46>
 32a:	b1 30       	cpi	r27, 0x01	; 1
 32c:	81 f0       	breq	.+32     	; 0x34e <__fixunssfsi+0x46>
 32e:	a0 d0       	rcall	.+320    	; 0x470 <__fp_zero>
 330:	b1 e0       	ldi	r27, 0x01	; 1
 332:	08 95       	ret
 334:	9d c0       	rjmp	.+314    	; 0x470 <__fp_zero>
 336:	67 2f       	mov	r22, r23
 338:	78 2f       	mov	r23, r24
 33a:	88 27       	eor	r24, r24
 33c:	b8 5f       	subi	r27, 0xF8	; 248
 33e:	39 f0       	breq	.+14     	; 0x34e <__fixunssfsi+0x46>
 340:	b9 3f       	cpi	r27, 0xF9	; 249
 342:	cc f3       	brlt	.-14     	; 0x336 <__fixunssfsi+0x2e>
 344:	86 95       	lsr	r24
 346:	77 95       	ror	r23
 348:	67 95       	ror	r22
 34a:	b3 95       	inc	r27
 34c:	d9 f7       	brne	.-10     	; 0x344 <__fixunssfsi+0x3c>
 34e:	3e f4       	brtc	.+14     	; 0x35e <__fixunssfsi+0x56>
 350:	90 95       	com	r25
 352:	80 95       	com	r24
 354:	70 95       	com	r23
 356:	61 95       	neg	r22
 358:	7f 4f       	sbci	r23, 0xFF	; 255
 35a:	8f 4f       	sbci	r24, 0xFF	; 255
 35c:	9f 4f       	sbci	r25, 0xFF	; 255
 35e:	08 95       	ret

00000360 <__floatundisf>:
 360:	e8 94       	clt

00000362 <__fp_di2sf>:
 362:	f9 2f       	mov	r31, r25
 364:	96 eb       	ldi	r25, 0xB6	; 182
 366:	ff 23       	and	r31, r31
 368:	81 f0       	breq	.+32     	; 0x38a <__fp_di2sf+0x28>
 36a:	12 16       	cp	r1, r18
 36c:	13 06       	cpc	r1, r19
 36e:	14 06       	cpc	r1, r20
 370:	44 0b       	sbc	r20, r20
 372:	93 95       	inc	r25
 374:	f6 95       	lsr	r31
 376:	87 95       	ror	r24
 378:	77 95       	ror	r23
 37a:	67 95       	ror	r22
 37c:	57 95       	ror	r21
 37e:	40 40       	sbci	r20, 0x00	; 0
 380:	ff 23       	and	r31, r31
 382:	b9 f7       	brne	.-18     	; 0x372 <__fp_di2sf+0x10>
 384:	1b c0       	rjmp	.+54     	; 0x3bc <__fp_di2sf+0x5a>
 386:	99 27       	eor	r25, r25
 388:	08 95       	ret
 38a:	88 23       	and	r24, r24
 38c:	51 f4       	brne	.+20     	; 0x3a2 <__fp_di2sf+0x40>
 38e:	98 50       	subi	r25, 0x08	; 8
 390:	d2 f7       	brpl	.-12     	; 0x386 <__fp_di2sf+0x24>
 392:	87 2b       	or	r24, r23
 394:	76 2f       	mov	r23, r22
 396:	65 2f       	mov	r22, r21
 398:	54 2f       	mov	r21, r20
 39a:	43 2f       	mov	r20, r19
 39c:	32 2f       	mov	r19, r18
 39e:	20 e0       	ldi	r18, 0x00	; 0
 3a0:	b1 f3       	breq	.-20     	; 0x38e <__fp_di2sf+0x2c>
 3a2:	12 16       	cp	r1, r18
 3a4:	13 06       	cpc	r1, r19
 3a6:	14 06       	cpc	r1, r20
 3a8:	44 0b       	sbc	r20, r20
 3aa:	88 23       	and	r24, r24
 3ac:	3a f0       	brmi	.+14     	; 0x3bc <__fp_di2sf+0x5a>
 3ae:	9a 95       	dec	r25
 3b0:	44 0f       	add	r20, r20
 3b2:	55 1f       	adc	r21, r21
 3b4:	66 1f       	adc	r22, r22
 3b6:	77 1f       	adc	r23, r23
 3b8:	88 1f       	adc	r24, r24
 3ba:	ca f7       	brpl	.-14     	; 0x3ae <__fp_di2sf+0x4c>
 3bc:	55 23       	and	r21, r21
 3be:	4a f4       	brpl	.+18     	; 0x3d2 <__fp_di2sf+0x70>
 3c0:	44 0f       	add	r20, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	11 f4       	brne	.+4      	; 0x3ca <__fp_di2sf+0x68>
 3c6:	60 ff       	sbrs	r22, 0
 3c8:	04 c0       	rjmp	.+8      	; 0x3d2 <__fp_di2sf+0x70>
 3ca:	6f 5f       	subi	r22, 0xFF	; 255
 3cc:	7f 4f       	sbci	r23, 0xFF	; 255
 3ce:	8f 4f       	sbci	r24, 0xFF	; 255
 3d0:	9f 4f       	sbci	r25, 0xFF	; 255
 3d2:	88 0f       	add	r24, r24
 3d4:	96 95       	lsr	r25
 3d6:	87 95       	ror	r24
 3d8:	97 f9       	bld	r25, 7
 3da:	08 95       	ret

000003dc <__fp_inf>:
 3dc:	97 f9       	bld	r25, 7
 3de:	9f 67       	ori	r25, 0x7F	; 127
 3e0:	80 e8       	ldi	r24, 0x80	; 128
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	60 e0       	ldi	r22, 0x00	; 0
 3e6:	08 95       	ret

000003e8 <__fp_nan>:
 3e8:	9f ef       	ldi	r25, 0xFF	; 255
 3ea:	80 ec       	ldi	r24, 0xC0	; 192
 3ec:	08 95       	ret

000003ee <__fp_pscA>:
 3ee:	00 24       	eor	r0, r0
 3f0:	0a 94       	dec	r0
 3f2:	16 16       	cp	r1, r22
 3f4:	17 06       	cpc	r1, r23
 3f6:	18 06       	cpc	r1, r24
 3f8:	09 06       	cpc	r0, r25
 3fa:	08 95       	ret

000003fc <__fp_pscB>:
 3fc:	00 24       	eor	r0, r0
 3fe:	0a 94       	dec	r0
 400:	12 16       	cp	r1, r18
 402:	13 06       	cpc	r1, r19
 404:	14 06       	cpc	r1, r20
 406:	05 06       	cpc	r0, r21
 408:	08 95       	ret

0000040a <__fp_round>:
 40a:	09 2e       	mov	r0, r25
 40c:	03 94       	inc	r0
 40e:	00 0c       	add	r0, r0
 410:	11 f4       	brne	.+4      	; 0x416 <__fp_round+0xc>
 412:	88 23       	and	r24, r24
 414:	52 f0       	brmi	.+20     	; 0x42a <__fp_round+0x20>
 416:	bb 0f       	add	r27, r27
 418:	40 f4       	brcc	.+16     	; 0x42a <__fp_round+0x20>
 41a:	bf 2b       	or	r27, r31
 41c:	11 f4       	brne	.+4      	; 0x422 <__fp_round+0x18>
 41e:	60 ff       	sbrs	r22, 0
 420:	04 c0       	rjmp	.+8      	; 0x42a <__fp_round+0x20>
 422:	6f 5f       	subi	r22, 0xFF	; 255
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	8f 4f       	sbci	r24, 0xFF	; 255
 428:	9f 4f       	sbci	r25, 0xFF	; 255
 42a:	08 95       	ret

0000042c <__fp_split3>:
 42c:	57 fd       	sbrc	r21, 7
 42e:	90 58       	subi	r25, 0x80	; 128
 430:	44 0f       	add	r20, r20
 432:	55 1f       	adc	r21, r21
 434:	59 f0       	breq	.+22     	; 0x44c <__fp_splitA+0x10>
 436:	5f 3f       	cpi	r21, 0xFF	; 255
 438:	71 f0       	breq	.+28     	; 0x456 <__fp_splitA+0x1a>
 43a:	47 95       	ror	r20

0000043c <__fp_splitA>:
 43c:	88 0f       	add	r24, r24
 43e:	97 fb       	bst	r25, 7
 440:	99 1f       	adc	r25, r25
 442:	61 f0       	breq	.+24     	; 0x45c <__fp_splitA+0x20>
 444:	9f 3f       	cpi	r25, 0xFF	; 255
 446:	79 f0       	breq	.+30     	; 0x466 <__fp_splitA+0x2a>
 448:	87 95       	ror	r24
 44a:	08 95       	ret
 44c:	12 16       	cp	r1, r18
 44e:	13 06       	cpc	r1, r19
 450:	14 06       	cpc	r1, r20
 452:	55 1f       	adc	r21, r21
 454:	f2 cf       	rjmp	.-28     	; 0x43a <__fp_split3+0xe>
 456:	46 95       	lsr	r20
 458:	f1 df       	rcall	.-30     	; 0x43c <__fp_splitA>
 45a:	08 c0       	rjmp	.+16     	; 0x46c <__fp_splitA+0x30>
 45c:	16 16       	cp	r1, r22
 45e:	17 06       	cpc	r1, r23
 460:	18 06       	cpc	r1, r24
 462:	99 1f       	adc	r25, r25
 464:	f1 cf       	rjmp	.-30     	; 0x448 <__fp_splitA+0xc>
 466:	86 95       	lsr	r24
 468:	71 05       	cpc	r23, r1
 46a:	61 05       	cpc	r22, r1
 46c:	08 94       	sec
 46e:	08 95       	ret

00000470 <__fp_zero>:
 470:	e8 94       	clt

00000472 <__fp_szero>:
 472:	bb 27       	eor	r27, r27
 474:	66 27       	eor	r22, r22
 476:	77 27       	eor	r23, r23
 478:	cb 01       	movw	r24, r22
 47a:	97 f9       	bld	r25, 7
 47c:	08 95       	ret

0000047e <__muldi3>:
 47e:	df 93       	push	r29
 480:	cf 93       	push	r28
 482:	1f 93       	push	r17
 484:	0f 93       	push	r16
 486:	9a 9d       	mul	r25, r10
 488:	f0 2d       	mov	r31, r0
 48a:	21 9f       	mul	r18, r17
 48c:	f0 0d       	add	r31, r0
 48e:	8b 9d       	mul	r24, r11
 490:	f0 0d       	add	r31, r0
 492:	8a 9d       	mul	r24, r10
 494:	e0 2d       	mov	r30, r0
 496:	f1 0d       	add	r31, r1
 498:	03 9f       	mul	r16, r19
 49a:	f0 0d       	add	r31, r0
 49c:	02 9f       	mul	r16, r18
 49e:	e0 0d       	add	r30, r0
 4a0:	f1 1d       	adc	r31, r1
 4a2:	4e 9d       	mul	r20, r14
 4a4:	e0 0d       	add	r30, r0
 4a6:	f1 1d       	adc	r31, r1
 4a8:	5e 9d       	mul	r21, r14
 4aa:	f0 0d       	add	r31, r0
 4ac:	4f 9d       	mul	r20, r15
 4ae:	f0 0d       	add	r31, r0
 4b0:	7f 93       	push	r23
 4b2:	6f 93       	push	r22
 4b4:	bf 92       	push	r11
 4b6:	af 92       	push	r10
 4b8:	5f 93       	push	r21
 4ba:	4f 93       	push	r20
 4bc:	d5 01       	movw	r26, r10
 4be:	8e d0       	rcall	.+284    	; 0x5dc <__umulhisi3>
 4c0:	8b 01       	movw	r16, r22
 4c2:	ac 01       	movw	r20, r24
 4c4:	d7 01       	movw	r26, r14
 4c6:	8a d0       	rcall	.+276    	; 0x5dc <__umulhisi3>
 4c8:	eb 01       	movw	r28, r22
 4ca:	e8 0f       	add	r30, r24
 4cc:	f9 1f       	adc	r31, r25
 4ce:	d6 01       	movw	r26, r12
 4d0:	1f d0       	rcall	.+62     	; 0x510 <__muldi3_6>
 4d2:	2f 91       	pop	r18
 4d4:	3f 91       	pop	r19
 4d6:	d6 01       	movw	r26, r12
 4d8:	81 d0       	rcall	.+258    	; 0x5dc <__umulhisi3>
 4da:	c6 0f       	add	r28, r22
 4dc:	d7 1f       	adc	r29, r23
 4de:	e8 1f       	adc	r30, r24
 4e0:	f9 1f       	adc	r31, r25
 4e2:	af 91       	pop	r26
 4e4:	bf 91       	pop	r27
 4e6:	14 d0       	rcall	.+40     	; 0x510 <__muldi3_6>
 4e8:	2f 91       	pop	r18
 4ea:	3f 91       	pop	r19
 4ec:	77 d0       	rcall	.+238    	; 0x5dc <__umulhisi3>
 4ee:	c6 0f       	add	r28, r22
 4f0:	d7 1f       	adc	r29, r23
 4f2:	e8 1f       	adc	r30, r24
 4f4:	f9 1f       	adc	r31, r25
 4f6:	d6 01       	movw	r26, r12
 4f8:	71 d0       	rcall	.+226    	; 0x5dc <__umulhisi3>
 4fa:	e6 0f       	add	r30, r22
 4fc:	f7 1f       	adc	r31, r23
 4fe:	98 01       	movw	r18, r16
 500:	be 01       	movw	r22, r28
 502:	cf 01       	movw	r24, r30
 504:	11 24       	eor	r1, r1
 506:	0f 91       	pop	r16
 508:	1f 91       	pop	r17
 50a:	cf 91       	pop	r28
 50c:	df 91       	pop	r29
 50e:	08 95       	ret

00000510 <__muldi3_6>:
 510:	65 d0       	rcall	.+202    	; 0x5dc <__umulhisi3>
 512:	46 0f       	add	r20, r22
 514:	57 1f       	adc	r21, r23
 516:	c8 1f       	adc	r28, r24
 518:	d9 1f       	adc	r29, r25
 51a:	08 f4       	brcc	.+2      	; 0x51e <__muldi3_6+0xe>
 51c:	31 96       	adiw	r30, 0x01	; 1
 51e:	08 95       	ret

00000520 <__umoddi3>:
 520:	68 94       	set
 522:	01 c0       	rjmp	.+2      	; 0x526 <__udivdi3_umoddi3>

00000524 <__udivdi3>:
 524:	e8 94       	clt

00000526 <__udivdi3_umoddi3>:
 526:	8f 92       	push	r8
 528:	9f 92       	push	r9
 52a:	cf 93       	push	r28
 52c:	df 93       	push	r29
 52e:	05 d0       	rcall	.+10     	; 0x53a <__udivmod64>
 530:	df 91       	pop	r29
 532:	cf 91       	pop	r28
 534:	9f 90       	pop	r9
 536:	8f 90       	pop	r8
 538:	08 95       	ret

0000053a <__udivmod64>:
 53a:	88 24       	eor	r8, r8
 53c:	99 24       	eor	r9, r9
 53e:	f4 01       	movw	r30, r8
 540:	e4 01       	movw	r28, r8
 542:	b0 e4       	ldi	r27, 0x40	; 64
 544:	9f 93       	push	r25
 546:	aa 27       	eor	r26, r26
 548:	9a 15       	cp	r25, r10
 54a:	8b 04       	cpc	r8, r11
 54c:	9c 04       	cpc	r9, r12
 54e:	ed 05       	cpc	r30, r13
 550:	fe 05       	cpc	r31, r14
 552:	cf 05       	cpc	r28, r15
 554:	d0 07       	cpc	r29, r16
 556:	a1 07       	cpc	r26, r17
 558:	98 f4       	brcc	.+38     	; 0x580 <__udivmod64+0x46>
 55a:	ad 2f       	mov	r26, r29
 55c:	dc 2f       	mov	r29, r28
 55e:	cf 2f       	mov	r28, r31
 560:	fe 2f       	mov	r31, r30
 562:	e9 2d       	mov	r30, r9
 564:	98 2c       	mov	r9, r8
 566:	89 2e       	mov	r8, r25
 568:	98 2f       	mov	r25, r24
 56a:	87 2f       	mov	r24, r23
 56c:	76 2f       	mov	r23, r22
 56e:	65 2f       	mov	r22, r21
 570:	54 2f       	mov	r21, r20
 572:	43 2f       	mov	r20, r19
 574:	32 2f       	mov	r19, r18
 576:	22 27       	eor	r18, r18
 578:	b8 50       	subi	r27, 0x08	; 8
 57a:	31 f7       	brne	.-52     	; 0x548 <__udivmod64+0xe>
 57c:	bf 91       	pop	r27
 57e:	27 c0       	rjmp	.+78     	; 0x5ce <__udivmod64+0x94>
 580:	1b 2e       	mov	r1, r27
 582:	bf 91       	pop	r27
 584:	bb 27       	eor	r27, r27
 586:	22 0f       	add	r18, r18
 588:	33 1f       	adc	r19, r19
 58a:	44 1f       	adc	r20, r20
 58c:	55 1f       	adc	r21, r21
 58e:	66 1f       	adc	r22, r22
 590:	77 1f       	adc	r23, r23
 592:	88 1f       	adc	r24, r24
 594:	99 1f       	adc	r25, r25
 596:	88 1c       	adc	r8, r8
 598:	99 1c       	adc	r9, r9
 59a:	ee 1f       	adc	r30, r30
 59c:	ff 1f       	adc	r31, r31
 59e:	cc 1f       	adc	r28, r28
 5a0:	dd 1f       	adc	r29, r29
 5a2:	aa 1f       	adc	r26, r26
 5a4:	bb 1f       	adc	r27, r27
 5a6:	8a 14       	cp	r8, r10
 5a8:	9b 04       	cpc	r9, r11
 5aa:	ec 05       	cpc	r30, r12
 5ac:	fd 05       	cpc	r31, r13
 5ae:	ce 05       	cpc	r28, r14
 5b0:	df 05       	cpc	r29, r15
 5b2:	a0 07       	cpc	r26, r16
 5b4:	b1 07       	cpc	r27, r17
 5b6:	48 f0       	brcs	.+18     	; 0x5ca <__udivmod64+0x90>
 5b8:	8a 18       	sub	r8, r10
 5ba:	9b 08       	sbc	r9, r11
 5bc:	ec 09       	sbc	r30, r12
 5be:	fd 09       	sbc	r31, r13
 5c0:	ce 09       	sbc	r28, r14
 5c2:	df 09       	sbc	r29, r15
 5c4:	a0 0b       	sbc	r26, r16
 5c6:	b1 0b       	sbc	r27, r17
 5c8:	21 60       	ori	r18, 0x01	; 1
 5ca:	1a 94       	dec	r1
 5cc:	e1 f6       	brne	.-72     	; 0x586 <__udivmod64+0x4c>
 5ce:	2e f4       	brtc	.+10     	; 0x5da <__udivmod64+0xa0>
 5d0:	94 01       	movw	r18, r8
 5d2:	af 01       	movw	r20, r30
 5d4:	be 01       	movw	r22, r28
 5d6:	cd 01       	movw	r24, r26
 5d8:	00 0c       	add	r0, r0
 5da:	08 95       	ret

000005dc <__umulhisi3>:
 5dc:	a2 9f       	mul	r26, r18
 5de:	b0 01       	movw	r22, r0
 5e0:	b3 9f       	mul	r27, r19
 5e2:	c0 01       	movw	r24, r0
 5e4:	a3 9f       	mul	r26, r19
 5e6:	70 0d       	add	r23, r0
 5e8:	81 1d       	adc	r24, r1
 5ea:	11 24       	eor	r1, r1
 5ec:	91 1d       	adc	r25, r1
 5ee:	b2 9f       	mul	r27, r18
 5f0:	70 0d       	add	r23, r0
 5f2:	81 1d       	adc	r24, r1
 5f4:	11 24       	eor	r1, r1
 5f6:	91 1d       	adc	r25, r1
 5f8:	08 95       	ret

000005fa <_exit>:
 5fa:	f8 94       	cli

000005fc <__stop_program>:
 5fc:	ff cf       	rjmp	.-2      	; 0x5fc <__stop_program>
