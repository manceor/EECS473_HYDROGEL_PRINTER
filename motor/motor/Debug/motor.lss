
motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000067e  000006f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000067e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000006f4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000724  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000764  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b77  00000000  00000000  000007ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008ea  00000000  00000000  00001363  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c0c  00000000  00000000  00001c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000100  00000000  00000000  0000285c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00012cfa  00000000  00000000  0000295c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b4  00000000  00000000  00015656  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0001580a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000006a6  00000000  00000000  00015872  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e7       	ldi	r30, 0x7E	; 126
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	df d0       	rcall	.+446    	; 0x272 <main>
  b4:	e2 c2       	rjmp	.+1476   	; 0x67a <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <board_init>:
#include <board.h>
#include <compiler.h>
#include <conf_board.h>

void board_init(void)
{
  b8:	08 95       	ret

000000ba <__portable_avr_delay_cycles>:
void motorReset(){
	//using GPIO3 (PORTB3) for reset
	//active low
	PORTB &= ~(1<<PORTB3);
	delay_us(50);
	PORTB |= (1<<PORTB3);
  ba:	04 c0       	rjmp	.+8      	; 0xc4 <__portable_avr_delay_cycles+0xa>
  bc:	61 50       	subi	r22, 0x01	; 1
  be:	71 09       	sbc	r23, r1
  c0:	81 09       	sbc	r24, r1
  c2:	91 09       	sbc	r25, r1
  c4:	61 15       	cp	r22, r1
  c6:	71 05       	cpc	r23, r1
  c8:	81 05       	cpc	r24, r1
  ca:	91 05       	cpc	r25, r1
  cc:	b9 f7       	brne	.-18     	; 0xbc <__portable_avr_delay_cycles+0x2>
  ce:	08 95       	ret

000000d0 <initGPIO>:
  d0:	8f e0       	ldi	r24, 0x0F	; 15
  d2:	84 b9       	out	0x04, r24	; 4
  d4:	8a b1       	in	r24, 0x0a	; 10
  d6:	80 63       	ori	r24, 0x30	; 48
  d8:	8a b9       	out	0x0a, r24	; 10
  da:	87 b1       	in	r24, 0x07	; 7
  dc:	80 63       	ori	r24, 0x30	; 48
  de:	87 b9       	out	0x07, r24	; 7
  e0:	2b 9a       	sbi	0x05, 3	; 5
  e2:	08 95       	ret

000000e4 <setMotorDir>:
  e4:	88 23       	and	r24, r24
  e6:	11 f0       	breq	.+4      	; 0xec <setMotorDir+0x8>
  e8:	28 9a       	sbi	0x05, 0	; 5
  ea:	08 95       	ret
  ec:	28 98       	cbi	0x05, 0	; 5
  ee:	08 95       	ret

000000f0 <moveMotor>:
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	29 9a       	sbi	0x05, 1	; 5
 102:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 106:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 10a:	41 15       	cp	r20, r1
 10c:	51 05       	cpc	r21, r1
 10e:	99 f1       	breq	.+102    	; 0x176 <moveMotor+0x86>
 110:	95 2f       	mov	r25, r21
 112:	99 0f       	add	r25, r25
 114:	99 0b       	sbc	r25, r25
 116:	68 94       	set
 118:	aa 24       	eor	r10, r10
 11a:	a6 f8       	bld	r10, 6
 11c:	0f 2e       	mov	r0, r31
 11e:	f2 e4       	ldi	r31, 0x42	; 66
 120:	bf 2e       	mov	r11, r31
 122:	f0 2d       	mov	r31, r0
 124:	0f 2e       	mov	r0, r31
 126:	ff e0       	ldi	r31, 0x0F	; 15
 128:	cf 2e       	mov	r12, r31
 12a:	f0 2d       	mov	r31, r0
 12c:	d1 2c       	mov	r13, r1
 12e:	e1 2c       	mov	r14, r1
 130:	f1 2c       	mov	r15, r1
 132:	00 e0       	ldi	r16, 0x00	; 0
 134:	10 e0       	ldi	r17, 0x00	; 0
 136:	24 2f       	mov	r18, r20
 138:	35 2f       	mov	r19, r21
 13a:	49 2f       	mov	r20, r25
 13c:	59 2f       	mov	r21, r25
 13e:	69 2f       	mov	r22, r25
 140:	79 2f       	mov	r23, r25
 142:	89 2f       	mov	r24, r25
 144:	dc d1       	rcall	.+952    	; 0x4fe <__muldi3>
 146:	0f 2e       	mov	r0, r31
 148:	f6 e0       	ldi	r31, 0x06	; 6
 14a:	af 2e       	mov	r10, r31
 14c:	f0 2d       	mov	r31, r0
 14e:	b1 2c       	mov	r11, r1
 150:	c1 2c       	mov	r12, r1
 152:	28 d2       	rcall	.+1104   	; 0x5a4 <__udivdi3>
 154:	21 5c       	subi	r18, 0xC1	; 193
 156:	3d 4b       	sbci	r19, 0xBD	; 189
 158:	40 4f       	sbci	r20, 0xF0	; 240
 15a:	5f 4f       	sbci	r21, 0xFF	; 255
 15c:	6f 4f       	sbci	r22, 0xFF	; 255
 15e:	7f 4f       	sbci	r23, 0xFF	; 255
 160:	8f 4f       	sbci	r24, 0xFF	; 255
 162:	9f 4f       	sbci	r25, 0xFF	; 255
 164:	3d d1       	rcall	.+634    	; 0x3e0 <__floatundisf>
 166:	20 e0       	ldi	r18, 0x00	; 0
 168:	34 e2       	ldi	r19, 0x24	; 36
 16a:	44 e7       	ldi	r20, 0x74	; 116
 16c:	59 e4       	ldi	r21, 0x49	; 73
 16e:	a4 d0       	rcall	.+328    	; 0x2b8 <__divsf3>
 170:	0b d1       	rcall	.+534    	; 0x388 <__fixunssfsi>
 172:	a3 df       	rcall	.-186    	; 0xba <__portable_avr_delay_cycles>
 174:	05 c0       	rjmp	.+10     	; 0x180 <moveMotor+0x90>
 176:	61 e0       	ldi	r22, 0x01	; 1
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	9d df       	rcall	.-198    	; 0xba <__portable_avr_delay_cycles>
 180:	29 98       	cbi	0x05, 1	; 5
 182:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 186:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 18a:	00 97       	sbiw	r24, 0x00	; 0
 18c:	a1 f1       	breq	.+104    	; 0x1f6 <moveMotor+0x106>
 18e:	e9 2f       	mov	r30, r25
 190:	ee 0f       	add	r30, r30
 192:	ee 0b       	sbc	r30, r30
 194:	68 94       	set
 196:	aa 24       	eor	r10, r10
 198:	a6 f8       	bld	r10, 6
 19a:	0f 2e       	mov	r0, r31
 19c:	f2 e4       	ldi	r31, 0x42	; 66
 19e:	bf 2e       	mov	r11, r31
 1a0:	f0 2d       	mov	r31, r0
 1a2:	0f 2e       	mov	r0, r31
 1a4:	ff e0       	ldi	r31, 0x0F	; 15
 1a6:	cf 2e       	mov	r12, r31
 1a8:	f0 2d       	mov	r31, r0
 1aa:	d1 2c       	mov	r13, r1
 1ac:	e1 2c       	mov	r14, r1
 1ae:	f1 2c       	mov	r15, r1
 1b0:	00 e0       	ldi	r16, 0x00	; 0
 1b2:	10 e0       	ldi	r17, 0x00	; 0
 1b4:	28 2f       	mov	r18, r24
 1b6:	39 2f       	mov	r19, r25
 1b8:	4e 2f       	mov	r20, r30
 1ba:	5e 2f       	mov	r21, r30
 1bc:	6e 2f       	mov	r22, r30
 1be:	7e 2f       	mov	r23, r30
 1c0:	8e 2f       	mov	r24, r30
 1c2:	9e 2f       	mov	r25, r30
 1c4:	9c d1       	rcall	.+824    	; 0x4fe <__muldi3>
 1c6:	0f 2e       	mov	r0, r31
 1c8:	f6 e0       	ldi	r31, 0x06	; 6
 1ca:	af 2e       	mov	r10, r31
 1cc:	f0 2d       	mov	r31, r0
 1ce:	b1 2c       	mov	r11, r1
 1d0:	c1 2c       	mov	r12, r1
 1d2:	e8 d1       	rcall	.+976    	; 0x5a4 <__udivdi3>
 1d4:	21 5c       	subi	r18, 0xC1	; 193
 1d6:	3d 4b       	sbci	r19, 0xBD	; 189
 1d8:	40 4f       	sbci	r20, 0xF0	; 240
 1da:	5f 4f       	sbci	r21, 0xFF	; 255
 1dc:	6f 4f       	sbci	r22, 0xFF	; 255
 1de:	7f 4f       	sbci	r23, 0xFF	; 255
 1e0:	8f 4f       	sbci	r24, 0xFF	; 255
 1e2:	9f 4f       	sbci	r25, 0xFF	; 255
 1e4:	fd d0       	rcall	.+506    	; 0x3e0 <__floatundisf>
 1e6:	20 e0       	ldi	r18, 0x00	; 0
 1e8:	34 e2       	ldi	r19, 0x24	; 36
 1ea:	44 e7       	ldi	r20, 0x74	; 116
 1ec:	59 e4       	ldi	r21, 0x49	; 73
 1ee:	64 d0       	rcall	.+200    	; 0x2b8 <__divsf3>
 1f0:	cb d0       	rcall	.+406    	; 0x388 <__fixunssfsi>
 1f2:	63 df       	rcall	.-314    	; 0xba <__portable_avr_delay_cycles>
 1f4:	05 c0       	rjmp	.+10     	; 0x200 <moveMotor+0x110>
 1f6:	61 e0       	ldi	r22, 0x01	; 1
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	5d df       	rcall	.-326    	; 0xba <__portable_avr_delay_cycles>
 200:	1f 91       	pop	r17
 202:	0f 91       	pop	r16
 204:	ff 90       	pop	r15
 206:	ef 90       	pop	r14
 208:	df 90       	pop	r13
 20a:	cf 90       	pop	r12
 20c:	bf 90       	pop	r11
 20e:	af 90       	pop	r10
 210:	08 95       	ret

00000212 <motorSleep>:
 212:	88 23       	and	r24, r24
 214:	11 f0       	breq	.+4      	; 0x21a <motorSleep+0x8>
 216:	2a 9a       	sbi	0x05, 2	; 5
 218:	08 95       	ret
 21a:	2a 98       	cbi	0x05, 2	; 5
 21c:	08 95       	ret

0000021e <setStepDiv>:
//Change the microstepping division. Takes effect on next STEP pulse.
void setStepDiv(int div){
	//using GPIO4 (PORTD4) as MS3
	//using GPIO5 (PORTD5) as MS2
	//using GPIO6 (PORTC4) as MS1
	switch(div){ //consider stopping motor while changing settings
 21e:	84 30       	cpi	r24, 0x04	; 4
 220:	91 05       	cpc	r25, r1
 222:	a9 f0       	breq	.+42     	; 0x24e <setStepDiv+0x30>
 224:	34 f4       	brge	.+12     	; 0x232 <setStepDiv+0x14>
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	91 05       	cpc	r25, r1
 22a:	49 f0       	breq	.+18     	; 0x23e <setStepDiv+0x20>
 22c:	02 97       	sbiw	r24, 0x02	; 2
 22e:	59 f0       	breq	.+22     	; 0x246 <setStepDiv+0x28>
 230:	08 95       	ret
 232:	88 30       	cpi	r24, 0x08	; 8
 234:	91 05       	cpc	r25, r1
 236:	79 f0       	breq	.+30     	; 0x256 <setStepDiv+0x38>
 238:	40 97       	sbiw	r24, 0x10	; 16
 23a:	89 f0       	breq	.+34     	; 0x25e <setStepDiv+0x40>
 23c:	08 95       	ret
		case 1: //full step
			PORTD &= ~(1<<PORTD4); //0
 23e:	5c 98       	cbi	0x0b, 4	; 11
			PORTD &= ~(1<<PORTD5); //0
 240:	5d 98       	cbi	0x0b, 5	; 11
			PORTC &= ~(1<<PORTC4); //0
 242:	44 98       	cbi	0x08, 4	; 8
			break;
 244:	08 95       	ret
		case 2: //half step
			PORTD &= ~(1<<PORTD4); //0
 246:	5c 98       	cbi	0x0b, 4	; 11
			PORTD &= ~(1<<PORTD5); //0
 248:	5d 98       	cbi	0x0b, 5	; 11
			PORTC |= (1<<PORTC4);  //1
 24a:	44 9a       	sbi	0x08, 4	; 8
			break;
 24c:	08 95       	ret
		case 4:
			PORTD &= ~(1<<PORTD4); //0
 24e:	5c 98       	cbi	0x0b, 4	; 11
			PORTD |= (1<<PORTD5);  //1
 250:	5d 9a       	sbi	0x0b, 5	; 11
			PORTC &= ~(1<<PORTC4); //0
 252:	44 98       	cbi	0x08, 4	; 8
			break;
 254:	08 95       	ret
		case 8:
			PORTD &= ~(1<<PORTD4); //0
 256:	5c 98       	cbi	0x0b, 4	; 11
			PORTD |= (1<<PORTD5);  //1
 258:	5d 9a       	sbi	0x0b, 5	; 11
			PORTC |= (1<<PORTC4);  //1
 25a:	44 9a       	sbi	0x08, 4	; 8
			break;
 25c:	08 95       	ret
		case 16:
			PORTD |= (1<<PORTD4);  //1
 25e:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD |= (1<<PORTD5);  //1
 260:	5d 9a       	sbi	0x0b, 5	; 11
			PORTC |= (1<<PORTC4);  //1
 262:	44 9a       	sbi	0x08, 4	; 8
 264:	08 95       	ret

00000266 <setEnable>:
	}
	return;
}

void setEnable(bool set){
	if(set){
 266:	88 23       	and	r24, r24
 268:	11 f0       	breq	.+4      	; 0x26e <setEnable+0x8>
		PORTC |= (1<<PORTC5);
 26a:	45 9a       	sbi	0x08, 5	; 8
 26c:	08 95       	ret
	}
	else{
		PORTC &= ~(1<<PORTC5);
 26e:	45 98       	cbi	0x08, 5	; 8
 270:	08 95       	ret

00000272 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
 272:	22 df       	rcall	.-444    	; 0xb8 <board_init>
	/* Insert application code here, after the board has been initialized. */
	initGPIO();
 274:	2d df       	rcall	.-422    	; 0xd0 <initGPIO>
 276:	78 94       	sei
	//change stuff below; SW0 = PB0 = PCINT8
	//PCMSK0 |= (1<<PCINT0); //enable PCINT0
	//PCIFR |= (1<<PCIF0); //clear PCINT0
	//PCICR |= (1<<PCIE0); //enable PCINT0
	
	sei(); //enable interrupts
 278:	82 e0       	ldi	r24, 0x02	; 2
	int dir = 0;
	setStepDiv(2);
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	d0 df       	rcall	.-96     	; 0x21e <setStepDiv>
	setEnable(true);
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	f2 df       	rcall	.-28     	; 0x266 <setEnable>
	motorSleep(true); //active low, so this keeps it awake
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	c6 df       	rcall	.-116    	; 0x212 <motorSleep>
 286:	00 e0       	ldi	r16, 0x00	; 0
	//PCMSK0 |= (1<<PCINT0); //enable PCINT0
	//PCIFR |= (1<<PCIF0); //clear PCINT0
	//PCICR |= (1<<PCIE0); //enable PCINT0
	
	sei(); //enable interrupts
	int dir = 0;
 288:	10 e0       	ldi	r17, 0x00	; 0
 28a:	ff 24       	eor	r15, r15
	motorSleep(true); //active low, so this keeps it awake
	while(1){
		for(int i = 0; i < 20000; ++i){
			moveMotor(1);
		}
		dir = !dir;
 28c:	f3 94       	inc	r15
 28e:	e1 2c       	mov	r14, r1
	//PCMSK0 |= (1<<PCINT0); //enable PCINT0
	//PCIFR |= (1<<PCIF0); //clear PCINT0
	//PCICR |= (1<<PCIE0); //enable PCINT0
	
	sei(); //enable interrupts
	int dir = 0;
 290:	c0 e2       	ldi	r28, 0x20	; 32
 292:	de e4       	ldi	r29, 0x4E	; 78
	setStepDiv(2);
	setEnable(true);
	motorSleep(true); //active low, so this keeps it awake
	while(1){
		for(int i = 0; i < 20000; ++i){
			moveMotor(1);
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	2b df       	rcall	.-426    	; 0xf0 <moveMotor>
 29a:	21 97       	sbiw	r28, 0x01	; 1
 29c:	d9 f7       	brne	.-10     	; 0x294 <main+0x22>
	int dir = 0;
	setStepDiv(2);
	setEnable(true);
	motorSleep(true); //active low, so this keeps it awake
	while(1){
		for(int i = 0; i < 20000; ++i){
 29e:	8f 2d       	mov	r24, r15
			moveMotor(1);
		}
		dir = !dir;
 2a0:	01 2b       	or	r16, r17
 2a2:	09 f0       	breq	.+2      	; 0x2a6 <main+0x34>
 2a4:	8e 2d       	mov	r24, r14
 2a6:	08 2f       	mov	r16, r24
 2a8:	10 e0       	ldi	r17, 0x00	; 0
		setMotorDir(dir);
 2aa:	1c df       	rcall	.-456    	; 0xe4 <setMotorDir>
 2ac:	6e e8       	ldi	r22, 0x8E	; 142
		delay_ms(50);
 2ae:	70 e2       	ldi	r23, 0x20	; 32
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 df       	rcall	.-508    	; 0xba <__portable_avr_delay_cycles>
 2b6:	ec cf       	rjmp	.-40     	; 0x290 <main+0x1e>

000002b8 <__divsf3>:
 2b8:	0c d0       	rcall	.+24     	; 0x2d2 <__divsf3x>
	}
 2ba:	e7 c0       	rjmp	.+462    	; 0x48a <__fp_round>
 2bc:	df d0       	rcall	.+446    	; 0x47c <__fp_pscB>
 2be:	40 f0       	brcs	.+16     	; 0x2d0 <__divsf3+0x18>
 2c0:	d6 d0       	rcall	.+428    	; 0x46e <__fp_pscA>
 2c2:	30 f0       	brcs	.+12     	; 0x2d0 <__divsf3+0x18>
 2c4:	21 f4       	brne	.+8      	; 0x2ce <__divsf3+0x16>
 2c6:	5f 3f       	cpi	r21, 0xFF	; 255
 2c8:	19 f0       	breq	.+6      	; 0x2d0 <__divsf3+0x18>
 2ca:	c8 c0       	rjmp	.+400    	; 0x45c <__fp_inf>
 2cc:	51 11       	cpse	r21, r1
 2ce:	11 c1       	rjmp	.+546    	; 0x4f2 <__fp_szero>
 2d0:	cb c0       	rjmp	.+406    	; 0x468 <__fp_nan>

000002d2 <__divsf3x>:
 2d2:	ec d0       	rcall	.+472    	; 0x4ac <__fp_split3>
 2d4:	98 f3       	brcs	.-26     	; 0x2bc <__divsf3+0x4>

000002d6 <__divsf3_pse>:
 2d6:	99 23       	and	r25, r25
 2d8:	c9 f3       	breq	.-14     	; 0x2cc <__divsf3+0x14>
 2da:	55 23       	and	r21, r21
 2dc:	b1 f3       	breq	.-20     	; 0x2ca <__divsf3+0x12>
 2de:	95 1b       	sub	r25, r21
 2e0:	55 0b       	sbc	r21, r21
 2e2:	bb 27       	eor	r27, r27
 2e4:	aa 27       	eor	r26, r26
 2e6:	62 17       	cp	r22, r18
 2e8:	73 07       	cpc	r23, r19
 2ea:	84 07       	cpc	r24, r20
 2ec:	38 f0       	brcs	.+14     	; 0x2fc <__divsf3_pse+0x26>
 2ee:	9f 5f       	subi	r25, 0xFF	; 255
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	22 0f       	add	r18, r18
 2f4:	33 1f       	adc	r19, r19
 2f6:	44 1f       	adc	r20, r20
 2f8:	aa 1f       	adc	r26, r26
 2fa:	a9 f3       	breq	.-22     	; 0x2e6 <__divsf3_pse+0x10>
 2fc:	33 d0       	rcall	.+102    	; 0x364 <__divsf3_pse+0x8e>
 2fe:	0e 2e       	mov	r0, r30
 300:	3a f0       	brmi	.+14     	; 0x310 <__divsf3_pse+0x3a>
 302:	e0 e8       	ldi	r30, 0x80	; 128
 304:	30 d0       	rcall	.+96     	; 0x366 <__divsf3_pse+0x90>
 306:	91 50       	subi	r25, 0x01	; 1
 308:	50 40       	sbci	r21, 0x00	; 0
 30a:	e6 95       	lsr	r30
 30c:	00 1c       	adc	r0, r0
 30e:	ca f7       	brpl	.-14     	; 0x302 <__divsf3_pse+0x2c>
 310:	29 d0       	rcall	.+82     	; 0x364 <__divsf3_pse+0x8e>
 312:	fe 2f       	mov	r31, r30
 314:	27 d0       	rcall	.+78     	; 0x364 <__divsf3_pse+0x8e>
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	88 1f       	adc	r24, r24
 31c:	bb 1f       	adc	r27, r27
 31e:	26 17       	cp	r18, r22
 320:	37 07       	cpc	r19, r23
 322:	48 07       	cpc	r20, r24
 324:	ab 07       	cpc	r26, r27
 326:	b0 e8       	ldi	r27, 0x80	; 128
 328:	09 f0       	breq	.+2      	; 0x32c <__divsf3_pse+0x56>
 32a:	bb 0b       	sbc	r27, r27
 32c:	80 2d       	mov	r24, r0
 32e:	bf 01       	movw	r22, r30
 330:	ff 27       	eor	r31, r31
 332:	93 58       	subi	r25, 0x83	; 131
 334:	5f 4f       	sbci	r21, 0xFF	; 255
 336:	2a f0       	brmi	.+10     	; 0x342 <__divsf3_pse+0x6c>
 338:	9e 3f       	cpi	r25, 0xFE	; 254
 33a:	51 05       	cpc	r21, r1
 33c:	68 f0       	brcs	.+26     	; 0x358 <__divsf3_pse+0x82>
 33e:	8e c0       	rjmp	.+284    	; 0x45c <__fp_inf>
 340:	d8 c0       	rjmp	.+432    	; 0x4f2 <__fp_szero>
 342:	5f 3f       	cpi	r21, 0xFF	; 255
 344:	ec f3       	brlt	.-6      	; 0x340 <__divsf3_pse+0x6a>
 346:	98 3e       	cpi	r25, 0xE8	; 232
 348:	dc f3       	brlt	.-10     	; 0x340 <__divsf3_pse+0x6a>
 34a:	86 95       	lsr	r24
 34c:	77 95       	ror	r23
 34e:	67 95       	ror	r22
 350:	b7 95       	ror	r27
 352:	f7 95       	ror	r31
 354:	9f 5f       	subi	r25, 0xFF	; 255
 356:	c9 f7       	brne	.-14     	; 0x34a <__divsf3_pse+0x74>
 358:	88 0f       	add	r24, r24
 35a:	91 1d       	adc	r25, r1
 35c:	96 95       	lsr	r25
 35e:	87 95       	ror	r24
 360:	97 f9       	bld	r25, 7
 362:	08 95       	ret
 364:	e1 e0       	ldi	r30, 0x01	; 1
 366:	66 0f       	add	r22, r22
 368:	77 1f       	adc	r23, r23
 36a:	88 1f       	adc	r24, r24
 36c:	bb 1f       	adc	r27, r27
 36e:	62 17       	cp	r22, r18
 370:	73 07       	cpc	r23, r19
 372:	84 07       	cpc	r24, r20
 374:	ba 07       	cpc	r27, r26
 376:	20 f0       	brcs	.+8      	; 0x380 <__divsf3_pse+0xaa>
 378:	62 1b       	sub	r22, r18
 37a:	73 0b       	sbc	r23, r19
 37c:	84 0b       	sbc	r24, r20
 37e:	ba 0b       	sbc	r27, r26
 380:	ee 1f       	adc	r30, r30
 382:	88 f7       	brcc	.-30     	; 0x366 <__divsf3_pse+0x90>
 384:	e0 95       	com	r30
 386:	08 95       	ret

00000388 <__fixunssfsi>:
 388:	99 d0       	rcall	.+306    	; 0x4bc <__fp_splitA>
 38a:	88 f0       	brcs	.+34     	; 0x3ae <__fixunssfsi+0x26>
 38c:	9f 57       	subi	r25, 0x7F	; 127
 38e:	90 f0       	brcs	.+36     	; 0x3b4 <__fixunssfsi+0x2c>
 390:	b9 2f       	mov	r27, r25
 392:	99 27       	eor	r25, r25
 394:	b7 51       	subi	r27, 0x17	; 23
 396:	a0 f0       	brcs	.+40     	; 0x3c0 <__fixunssfsi+0x38>
 398:	d1 f0       	breq	.+52     	; 0x3ce <__fixunssfsi+0x46>
 39a:	66 0f       	add	r22, r22
 39c:	77 1f       	adc	r23, r23
 39e:	88 1f       	adc	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	1a f0       	brmi	.+6      	; 0x3aa <__fixunssfsi+0x22>
 3a4:	ba 95       	dec	r27
 3a6:	c9 f7       	brne	.-14     	; 0x39a <__fixunssfsi+0x12>
 3a8:	12 c0       	rjmp	.+36     	; 0x3ce <__fixunssfsi+0x46>
 3aa:	b1 30       	cpi	r27, 0x01	; 1
 3ac:	81 f0       	breq	.+32     	; 0x3ce <__fixunssfsi+0x46>
 3ae:	a0 d0       	rcall	.+320    	; 0x4f0 <__fp_zero>
 3b0:	b1 e0       	ldi	r27, 0x01	; 1
 3b2:	08 95       	ret
 3b4:	9d c0       	rjmp	.+314    	; 0x4f0 <__fp_zero>
 3b6:	67 2f       	mov	r22, r23
 3b8:	78 2f       	mov	r23, r24
 3ba:	88 27       	eor	r24, r24
 3bc:	b8 5f       	subi	r27, 0xF8	; 248
 3be:	39 f0       	breq	.+14     	; 0x3ce <__fixunssfsi+0x46>
 3c0:	b9 3f       	cpi	r27, 0xF9	; 249
 3c2:	cc f3       	brlt	.-14     	; 0x3b6 <__fixunssfsi+0x2e>
 3c4:	86 95       	lsr	r24
 3c6:	77 95       	ror	r23
 3c8:	67 95       	ror	r22
 3ca:	b3 95       	inc	r27
 3cc:	d9 f7       	brne	.-10     	; 0x3c4 <__fixunssfsi+0x3c>
 3ce:	3e f4       	brtc	.+14     	; 0x3de <__fixunssfsi+0x56>
 3d0:	90 95       	com	r25
 3d2:	80 95       	com	r24
 3d4:	70 95       	com	r23
 3d6:	61 95       	neg	r22
 3d8:	7f 4f       	sbci	r23, 0xFF	; 255
 3da:	8f 4f       	sbci	r24, 0xFF	; 255
 3dc:	9f 4f       	sbci	r25, 0xFF	; 255
 3de:	08 95       	ret

000003e0 <__floatundisf>:
 3e0:	e8 94       	clt

000003e2 <__fp_di2sf>:
 3e2:	f9 2f       	mov	r31, r25
 3e4:	96 eb       	ldi	r25, 0xB6	; 182
 3e6:	ff 23       	and	r31, r31
 3e8:	81 f0       	breq	.+32     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ea:	12 16       	cp	r1, r18
 3ec:	13 06       	cpc	r1, r19
 3ee:	14 06       	cpc	r1, r20
 3f0:	44 0b       	sbc	r20, r20
 3f2:	93 95       	inc	r25
 3f4:	f6 95       	lsr	r31
 3f6:	87 95       	ror	r24
 3f8:	77 95       	ror	r23
 3fa:	67 95       	ror	r22
 3fc:	57 95       	ror	r21
 3fe:	40 40       	sbci	r20, 0x00	; 0
 400:	ff 23       	and	r31, r31
 402:	b9 f7       	brne	.-18     	; 0x3f2 <__fp_di2sf+0x10>
 404:	1b c0       	rjmp	.+54     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 406:	99 27       	eor	r25, r25
 408:	08 95       	ret
 40a:	88 23       	and	r24, r24
 40c:	51 f4       	brne	.+20     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 40e:	98 50       	subi	r25, 0x08	; 8
 410:	d2 f7       	brpl	.-12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 412:	87 2b       	or	r24, r23
 414:	76 2f       	mov	r23, r22
 416:	65 2f       	mov	r22, r21
 418:	54 2f       	mov	r21, r20
 41a:	43 2f       	mov	r20, r19
 41c:	32 2f       	mov	r19, r18
 41e:	20 e0       	ldi	r18, 0x00	; 0
 420:	b1 f3       	breq	.-20     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 422:	12 16       	cp	r1, r18
 424:	13 06       	cpc	r1, r19
 426:	14 06       	cpc	r1, r20
 428:	44 0b       	sbc	r20, r20
 42a:	88 23       	and	r24, r24
 42c:	3a f0       	brmi	.+14     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 42e:	9a 95       	dec	r25
 430:	44 0f       	add	r20, r20
 432:	55 1f       	adc	r21, r21
 434:	66 1f       	adc	r22, r22
 436:	77 1f       	adc	r23, r23
 438:	88 1f       	adc	r24, r24
 43a:	ca f7       	brpl	.-14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 43c:	55 23       	and	r21, r21
 43e:	4a f4       	brpl	.+18     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 440:	44 0f       	add	r20, r20
 442:	55 1f       	adc	r21, r21
 444:	11 f4       	brne	.+4      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 446:	60 ff       	sbrs	r22, 0
 448:	04 c0       	rjmp	.+8      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44a:	6f 5f       	subi	r22, 0xFF	; 255
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	88 0f       	add	r24, r24
 454:	96 95       	lsr	r25
 456:	87 95       	ror	r24
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret

0000045c <__fp_inf>:
 45c:	97 f9       	bld	r25, 7
 45e:	9f 67       	ori	r25, 0x7F	; 127
 460:	80 e8       	ldi	r24, 0x80	; 128
 462:	70 e0       	ldi	r23, 0x00	; 0
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	08 95       	ret

00000468 <__fp_nan>:
 468:	9f ef       	ldi	r25, 0xFF	; 255
 46a:	80 ec       	ldi	r24, 0xC0	; 192
 46c:	08 95       	ret

0000046e <__fp_pscA>:
 46e:	00 24       	eor	r0, r0
 470:	0a 94       	dec	r0
 472:	16 16       	cp	r1, r22
 474:	17 06       	cpc	r1, r23
 476:	18 06       	cpc	r1, r24
 478:	09 06       	cpc	r0, r25
 47a:	08 95       	ret

0000047c <__fp_pscB>:
 47c:	00 24       	eor	r0, r0
 47e:	0a 94       	dec	r0
 480:	12 16       	cp	r1, r18
 482:	13 06       	cpc	r1, r19
 484:	14 06       	cpc	r1, r20
 486:	05 06       	cpc	r0, r21
 488:	08 95       	ret

0000048a <__fp_round>:
 48a:	09 2e       	mov	r0, r25
 48c:	03 94       	inc	r0
 48e:	00 0c       	add	r0, r0
 490:	11 f4       	brne	.+4      	; 0x496 <__fp_round+0xc>
 492:	88 23       	and	r24, r24
 494:	52 f0       	brmi	.+20     	; 0x4aa <__fp_round+0x20>
 496:	bb 0f       	add	r27, r27
 498:	40 f4       	brcc	.+16     	; 0x4aa <__fp_round+0x20>
 49a:	bf 2b       	or	r27, r31
 49c:	11 f4       	brne	.+4      	; 0x4a2 <__fp_round+0x18>
 49e:	60 ff       	sbrs	r22, 0
 4a0:	04 c0       	rjmp	.+8      	; 0x4aa <__fp_round+0x20>
 4a2:	6f 5f       	subi	r22, 0xFF	; 255
 4a4:	7f 4f       	sbci	r23, 0xFF	; 255
 4a6:	8f 4f       	sbci	r24, 0xFF	; 255
 4a8:	9f 4f       	sbci	r25, 0xFF	; 255
 4aa:	08 95       	ret

000004ac <__fp_split3>:
 4ac:	57 fd       	sbrc	r21, 7
 4ae:	90 58       	subi	r25, 0x80	; 128
 4b0:	44 0f       	add	r20, r20
 4b2:	55 1f       	adc	r21, r21
 4b4:	59 f0       	breq	.+22     	; 0x4cc <__fp_splitA+0x10>
 4b6:	5f 3f       	cpi	r21, 0xFF	; 255
 4b8:	71 f0       	breq	.+28     	; 0x4d6 <__fp_splitA+0x1a>
 4ba:	47 95       	ror	r20

000004bc <__fp_splitA>:
 4bc:	88 0f       	add	r24, r24
 4be:	97 fb       	bst	r25, 7
 4c0:	99 1f       	adc	r25, r25
 4c2:	61 f0       	breq	.+24     	; 0x4dc <__fp_splitA+0x20>
 4c4:	9f 3f       	cpi	r25, 0xFF	; 255
 4c6:	79 f0       	breq	.+30     	; 0x4e6 <__fp_splitA+0x2a>
 4c8:	87 95       	ror	r24
 4ca:	08 95       	ret
 4cc:	12 16       	cp	r1, r18
 4ce:	13 06       	cpc	r1, r19
 4d0:	14 06       	cpc	r1, r20
 4d2:	55 1f       	adc	r21, r21
 4d4:	f2 cf       	rjmp	.-28     	; 0x4ba <__fp_split3+0xe>
 4d6:	46 95       	lsr	r20
 4d8:	f1 df       	rcall	.-30     	; 0x4bc <__fp_splitA>
 4da:	08 c0       	rjmp	.+16     	; 0x4ec <__fp_splitA+0x30>
 4dc:	16 16       	cp	r1, r22
 4de:	17 06       	cpc	r1, r23
 4e0:	18 06       	cpc	r1, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	f1 cf       	rjmp	.-30     	; 0x4c8 <__fp_splitA+0xc>
 4e6:	86 95       	lsr	r24
 4e8:	71 05       	cpc	r23, r1
 4ea:	61 05       	cpc	r22, r1
 4ec:	08 94       	sec
 4ee:	08 95       	ret

000004f0 <__fp_zero>:
 4f0:	e8 94       	clt

000004f2 <__fp_szero>:
 4f2:	bb 27       	eor	r27, r27
 4f4:	66 27       	eor	r22, r22
 4f6:	77 27       	eor	r23, r23
 4f8:	cb 01       	movw	r24, r22
 4fa:	97 f9       	bld	r25, 7
 4fc:	08 95       	ret

000004fe <__muldi3>:
 4fe:	df 93       	push	r29
 500:	cf 93       	push	r28
 502:	1f 93       	push	r17
 504:	0f 93       	push	r16
 506:	9a 9d       	mul	r25, r10
 508:	f0 2d       	mov	r31, r0
 50a:	21 9f       	mul	r18, r17
 50c:	f0 0d       	add	r31, r0
 50e:	8b 9d       	mul	r24, r11
 510:	f0 0d       	add	r31, r0
 512:	8a 9d       	mul	r24, r10
 514:	e0 2d       	mov	r30, r0
 516:	f1 0d       	add	r31, r1
 518:	03 9f       	mul	r16, r19
 51a:	f0 0d       	add	r31, r0
 51c:	02 9f       	mul	r16, r18
 51e:	e0 0d       	add	r30, r0
 520:	f1 1d       	adc	r31, r1
 522:	4e 9d       	mul	r20, r14
 524:	e0 0d       	add	r30, r0
 526:	f1 1d       	adc	r31, r1
 528:	5e 9d       	mul	r21, r14
 52a:	f0 0d       	add	r31, r0
 52c:	4f 9d       	mul	r20, r15
 52e:	f0 0d       	add	r31, r0
 530:	7f 93       	push	r23
 532:	6f 93       	push	r22
 534:	bf 92       	push	r11
 536:	af 92       	push	r10
 538:	5f 93       	push	r21
 53a:	4f 93       	push	r20
 53c:	d5 01       	movw	r26, r10
 53e:	8e d0       	rcall	.+284    	; 0x65c <__umulhisi3>
 540:	8b 01       	movw	r16, r22
 542:	ac 01       	movw	r20, r24
 544:	d7 01       	movw	r26, r14
 546:	8a d0       	rcall	.+276    	; 0x65c <__umulhisi3>
 548:	eb 01       	movw	r28, r22
 54a:	e8 0f       	add	r30, r24
 54c:	f9 1f       	adc	r31, r25
 54e:	d6 01       	movw	r26, r12
 550:	1f d0       	rcall	.+62     	; 0x590 <__muldi3_6>
 552:	2f 91       	pop	r18
 554:	3f 91       	pop	r19
 556:	d6 01       	movw	r26, r12
 558:	81 d0       	rcall	.+258    	; 0x65c <__umulhisi3>
 55a:	c6 0f       	add	r28, r22
 55c:	d7 1f       	adc	r29, r23
 55e:	e8 1f       	adc	r30, r24
 560:	f9 1f       	adc	r31, r25
 562:	af 91       	pop	r26
 564:	bf 91       	pop	r27
 566:	14 d0       	rcall	.+40     	; 0x590 <__muldi3_6>
 568:	2f 91       	pop	r18
 56a:	3f 91       	pop	r19
 56c:	77 d0       	rcall	.+238    	; 0x65c <__umulhisi3>
 56e:	c6 0f       	add	r28, r22
 570:	d7 1f       	adc	r29, r23
 572:	e8 1f       	adc	r30, r24
 574:	f9 1f       	adc	r31, r25
 576:	d6 01       	movw	r26, r12
 578:	71 d0       	rcall	.+226    	; 0x65c <__umulhisi3>
 57a:	e6 0f       	add	r30, r22
 57c:	f7 1f       	adc	r31, r23
 57e:	98 01       	movw	r18, r16
 580:	be 01       	movw	r22, r28
 582:	cf 01       	movw	r24, r30
 584:	11 24       	eor	r1, r1
 586:	0f 91       	pop	r16
 588:	1f 91       	pop	r17
 58a:	cf 91       	pop	r28
 58c:	df 91       	pop	r29
 58e:	08 95       	ret

00000590 <__muldi3_6>:
 590:	65 d0       	rcall	.+202    	; 0x65c <__umulhisi3>
 592:	46 0f       	add	r20, r22
 594:	57 1f       	adc	r21, r23
 596:	c8 1f       	adc	r28, r24
 598:	d9 1f       	adc	r29, r25
 59a:	08 f4       	brcc	.+2      	; 0x59e <__muldi3_6+0xe>
 59c:	31 96       	adiw	r30, 0x01	; 1
 59e:	08 95       	ret

000005a0 <__umoddi3>:
 5a0:	68 94       	set
 5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <__udivdi3_umoddi3>

000005a4 <__udivdi3>:
 5a4:	e8 94       	clt

000005a6 <__udivdi3_umoddi3>:
 5a6:	8f 92       	push	r8
 5a8:	9f 92       	push	r9
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	05 d0       	rcall	.+10     	; 0x5ba <__udivmod64>
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	9f 90       	pop	r9
 5b6:	8f 90       	pop	r8
 5b8:	08 95       	ret

000005ba <__udivmod64>:
 5ba:	88 24       	eor	r8, r8
 5bc:	99 24       	eor	r9, r9
 5be:	f4 01       	movw	r30, r8
 5c0:	e4 01       	movw	r28, r8
 5c2:	b0 e4       	ldi	r27, 0x40	; 64
 5c4:	9f 93       	push	r25
 5c6:	aa 27       	eor	r26, r26
 5c8:	9a 15       	cp	r25, r10
 5ca:	8b 04       	cpc	r8, r11
 5cc:	9c 04       	cpc	r9, r12
 5ce:	ed 05       	cpc	r30, r13
 5d0:	fe 05       	cpc	r31, r14
 5d2:	cf 05       	cpc	r28, r15
 5d4:	d0 07       	cpc	r29, r16
 5d6:	a1 07       	cpc	r26, r17
 5d8:	98 f4       	brcc	.+38     	; 0x600 <__udivmod64+0x46>
 5da:	ad 2f       	mov	r26, r29
 5dc:	dc 2f       	mov	r29, r28
 5de:	cf 2f       	mov	r28, r31
 5e0:	fe 2f       	mov	r31, r30
 5e2:	e9 2d       	mov	r30, r9
 5e4:	98 2c       	mov	r9, r8
 5e6:	89 2e       	mov	r8, r25
 5e8:	98 2f       	mov	r25, r24
 5ea:	87 2f       	mov	r24, r23
 5ec:	76 2f       	mov	r23, r22
 5ee:	65 2f       	mov	r22, r21
 5f0:	54 2f       	mov	r21, r20
 5f2:	43 2f       	mov	r20, r19
 5f4:	32 2f       	mov	r19, r18
 5f6:	22 27       	eor	r18, r18
 5f8:	b8 50       	subi	r27, 0x08	; 8
 5fa:	31 f7       	brne	.-52     	; 0x5c8 <__udivmod64+0xe>
 5fc:	bf 91       	pop	r27
 5fe:	27 c0       	rjmp	.+78     	; 0x64e <__udivmod64+0x94>
 600:	1b 2e       	mov	r1, r27
 602:	bf 91       	pop	r27
 604:	bb 27       	eor	r27, r27
 606:	22 0f       	add	r18, r18
 608:	33 1f       	adc	r19, r19
 60a:	44 1f       	adc	r20, r20
 60c:	55 1f       	adc	r21, r21
 60e:	66 1f       	adc	r22, r22
 610:	77 1f       	adc	r23, r23
 612:	88 1f       	adc	r24, r24
 614:	99 1f       	adc	r25, r25
 616:	88 1c       	adc	r8, r8
 618:	99 1c       	adc	r9, r9
 61a:	ee 1f       	adc	r30, r30
 61c:	ff 1f       	adc	r31, r31
 61e:	cc 1f       	adc	r28, r28
 620:	dd 1f       	adc	r29, r29
 622:	aa 1f       	adc	r26, r26
 624:	bb 1f       	adc	r27, r27
 626:	8a 14       	cp	r8, r10
 628:	9b 04       	cpc	r9, r11
 62a:	ec 05       	cpc	r30, r12
 62c:	fd 05       	cpc	r31, r13
 62e:	ce 05       	cpc	r28, r14
 630:	df 05       	cpc	r29, r15
 632:	a0 07       	cpc	r26, r16
 634:	b1 07       	cpc	r27, r17
 636:	48 f0       	brcs	.+18     	; 0x64a <__udivmod64+0x90>
 638:	8a 18       	sub	r8, r10
 63a:	9b 08       	sbc	r9, r11
 63c:	ec 09       	sbc	r30, r12
 63e:	fd 09       	sbc	r31, r13
 640:	ce 09       	sbc	r28, r14
 642:	df 09       	sbc	r29, r15
 644:	a0 0b       	sbc	r26, r16
 646:	b1 0b       	sbc	r27, r17
 648:	21 60       	ori	r18, 0x01	; 1
 64a:	1a 94       	dec	r1
 64c:	e1 f6       	brne	.-72     	; 0x606 <__udivmod64+0x4c>
 64e:	2e f4       	brtc	.+10     	; 0x65a <__udivmod64+0xa0>
 650:	94 01       	movw	r18, r8
 652:	af 01       	movw	r20, r30
 654:	be 01       	movw	r22, r28
 656:	cd 01       	movw	r24, r26
 658:	00 0c       	add	r0, r0
 65a:	08 95       	ret

0000065c <__umulhisi3>:
 65c:	a2 9f       	mul	r26, r18
 65e:	b0 01       	movw	r22, r0
 660:	b3 9f       	mul	r27, r19
 662:	c0 01       	movw	r24, r0
 664:	a3 9f       	mul	r26, r19
 666:	70 0d       	add	r23, r0
 668:	81 1d       	adc	r24, r1
 66a:	11 24       	eor	r1, r1
 66c:	91 1d       	adc	r25, r1
 66e:	b2 9f       	mul	r27, r18
 670:	70 0d       	add	r23, r0
 672:	81 1d       	adc	r24, r1
 674:	11 24       	eor	r1, r1
 676:	91 1d       	adc	r25, r1
 678:	08 95       	ret

0000067a <_exit>:
 67a:	f8 94       	cli

0000067c <__stop_program>:
 67c:	ff cf       	rjmp	.-2      	; 0x67c <__stop_program>
